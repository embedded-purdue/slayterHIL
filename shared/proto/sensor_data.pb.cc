// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensor_data.proto
// Protobuf C++ Version: 6.32.1

#include "sensor_data.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Vector3D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector3D::Vector3D(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Vector3D_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vector3DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector3DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector3DDefaultTypeInternal() {}
  union {
    Vector3D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector3DDefaultTypeInternal _Vector3D_default_instance_;

inline constexpr AltimeterData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pressure_{0},
        altitude_{0},
        temperature_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AltimeterData::AltimeterData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AltimeterData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AltimeterDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AltimeterDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AltimeterDataDefaultTypeInternal() {}
  union {
    AltimeterData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AltimeterDataDefaultTypeInternal _AltimeterData_default_instance_;

inline constexpr ImuData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        acceleration_{nullptr},
        angular_velocity_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ImuData::ImuData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ImuData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImuDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImuDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImuDataDefaultTypeInternal() {}
  union {
    ImuData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImuDataDefaultTypeInternal _ImuData_default_instance_;

inline constexpr SensorPacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr},
        imu_data_{nullptr},
        altimeter_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SensorPacket::SensorPacket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SensorPacket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorPacketDefaultTypeInternal() {}
  union {
    SensorPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorPacketDefaultTypeInternal _SensorPacket_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_sensor_5fdata_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sensor_5fdata_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensor_5fdata_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::Vector3D, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::Vector3D, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Vector3D, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Vector3D, _impl_.z_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ImuData, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ImuData, _impl_.acceleration_),
        PROTOBUF_FIELD_OFFSET(::ImuData, _impl_.angular_velocity_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::AltimeterData, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::AltimeterData, _impl_.pressure_),
        PROTOBUF_FIELD_OFFSET(::AltimeterData, _impl_.altitude_),
        PROTOBUF_FIELD_OFFSET(::AltimeterData, _impl_.temperature_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::SensorPacket, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::SensorPacket, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::SensorPacket, _impl_.imu_data_),
        PROTOBUF_FIELD_OFFSET(::SensorPacket, _impl_.altimeter_data_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::Vector3D)},
        {9, sizeof(::ImuData)},
        {16, sizeof(::AltimeterData)},
        {25, sizeof(::SensorPacket)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_Vector3D_default_instance_._instance,
    &::_ImuData_default_instance_._instance,
    &::_AltimeterData_default_instance_._instance,
    &::_SensorPacket_default_instance_._instance,
};
const char descriptor_table_protodef_sensor_5fdata_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021sensor_data.proto\032\037google/protobuf/tim"
    "estamp.proto\"+\n\010Vector3D\022\t\n\001x\030\001 \001(\002\022\t\n\001y"
    "\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"O\n\007ImuData\022\037\n\014accelera"
    "tion\030\001 \001(\0132\t.Vector3D\022#\n\020angular_velocit"
    "y\030\002 \001(\0132\t.Vector3D\"H\n\rAltimeterData\022\020\n\010p"
    "ressure\030\001 \001(\002\022\020\n\010altitude\030\002 \001(\002\022\023\n\013tempe"
    "rature\030\003 \001(\002\"\201\001\n\014SensorPacket\022-\n\ttimesta"
    "mp\030\001 \001(\0132\032.google.protobuf.Timestamp\022\032\n\010"
    "imu_data\030\002 \001(\0132\010.ImuData\022&\n\016altimeter_da"
    "ta\030\003 \001(\0132\016.AltimeterDatab\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sensor_5fdata_2eproto_deps[1] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_sensor_5fdata_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensor_5fdata_2eproto = {
    false,
    false,
    392,
    descriptor_table_protodef_sensor_5fdata_2eproto,
    "sensor_data.proto",
    &descriptor_table_sensor_5fdata_2eproto_once,
    descriptor_table_sensor_5fdata_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_sensor_5fdata_2eproto::offsets,
    file_level_enum_descriptors_sensor_5fdata_2eproto,
    file_level_service_descriptors_sensor_5fdata_2eproto,
};
// ===================================================================

class Vector3D::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Vector3D>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Vector3D, _impl_._has_bits_);
};

Vector3D::Vector3D(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Vector3D_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Vector3D)
}
Vector3D::Vector3D(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Vector3D& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Vector3D_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Vector3D::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Vector3D::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector3D::~Vector3D() {
  // @@protoc_insertion_point(destructor:Vector3D)
  SharedDtor(*this);
}
inline void Vector3D::SharedDtor(MessageLite& self) {
  Vector3D& this_ = static_cast<Vector3D&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Vector3D::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Vector3D(arena);
}
constexpr auto Vector3D::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vector3D),
                                            alignof(Vector3D));
}
constexpr auto Vector3D::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Vector3D_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Vector3D::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Vector3D>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Vector3D::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Vector3D>(), &Vector3D::ByteSizeLong,
              &Vector3D::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Vector3D, _impl_._cached_size_),
          false,
      },
      &Vector3D::kDescriptorMethods,
      &descriptor_table_sensor_5fdata_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Vector3D_class_data_ =
        Vector3D::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Vector3D::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Vector3D_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Vector3D_class_data_.tc_table);
  return Vector3D_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
Vector3D::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vector3D, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Vector3D_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Vector3D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.y_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Vector3D::Clear() {
// @@protoc_insertion_point(message_clear_start:Vector3D)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Vector3D::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Vector3D& this_ = static_cast<const Vector3D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Vector3D::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Vector3D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:Vector3D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_x(), target);
    }
  }

  // float y = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_y(), target);
    }
  }

  // float z = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_z(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Vector3D)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Vector3D::ByteSizeLong(const MessageLite& base) {
  const Vector3D& this_ = static_cast<const Vector3D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Vector3D::ByteSizeLong() const {
  const Vector3D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Vector3D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // float x = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
        total_size += 5;
      }
    }
    // float y = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
        total_size += 5;
      }
    }
    // float z = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Vector3D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector3D*>(&to_msg);
  auto& from = static_cast<const Vector3D&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:Vector3D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
        _this->_impl_.z_ = from._impl_.z_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector3D::CopyFrom(const Vector3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Vector3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vector3D::InternalSwap(Vector3D* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_)
      + sizeof(Vector3D::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector3D::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImuData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ImuData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImuData, _impl_._has_bits_);
};

ImuData::ImuData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImuData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ImuData)
}
PROTOBUF_NDEBUG_INLINE ImuData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ImuData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ImuData::ImuData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ImuData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImuData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ImuData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.acceleration_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.acceleration_)
                : nullptr;
  _impl_.angular_velocity_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angular_velocity_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ImuData)
}
PROTOBUF_NDEBUG_INLINE ImuData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ImuData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, acceleration_),
           0,
           offsetof(Impl_, angular_velocity_) -
               offsetof(Impl_, acceleration_) +
               sizeof(Impl_::angular_velocity_));
}
ImuData::~ImuData() {
  // @@protoc_insertion_point(destructor:ImuData)
  SharedDtor(*this);
}
inline void ImuData::SharedDtor(MessageLite& self) {
  ImuData& this_ = static_cast<ImuData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.acceleration_;
  delete this_._impl_.angular_velocity_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ImuData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ImuData(arena);
}
constexpr auto ImuData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ImuData),
                                            alignof(ImuData));
}
constexpr auto ImuData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ImuData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ImuData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ImuData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ImuData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ImuData>(), &ImuData::ByteSizeLong,
              &ImuData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ImuData, _impl_._cached_size_),
          false,
      },
      &ImuData::kDescriptorMethods,
      &descriptor_table_sensor_5fdata_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ImuData_class_data_ =
        ImuData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ImuData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ImuData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ImuData_class_data_.tc_table);
  return ImuData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
ImuData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImuData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ImuData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ImuData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Vector3D angular_velocity = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ImuData, _impl_.angular_velocity_)}},
    // .Vector3D acceleration = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ImuData, _impl_.acceleration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Vector3D acceleration = 1;
    {PROTOBUF_FIELD_OFFSET(ImuData, _impl_.acceleration_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Vector3D angular_velocity = 2;
    {PROTOBUF_FIELD_OFFSET(ImuData, _impl_.angular_velocity_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::Vector3D>()},
      {::_pbi::TcParser::GetTable<::Vector3D>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ImuData::Clear() {
// @@protoc_insertion_point(message_clear_start:ImuData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.acceleration_ != nullptr);
      _impl_.acceleration_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.angular_velocity_ != nullptr);
      _impl_.angular_velocity_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ImuData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ImuData& this_ = static_cast<const ImuData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ImuData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ImuData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ImuData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .Vector3D acceleration = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.acceleration_, this_._impl_.acceleration_->GetCachedSize(), target,
        stream);
  }

  // .Vector3D angular_velocity = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.angular_velocity_, this_._impl_.angular_velocity_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImuData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ImuData::ByteSizeLong(const MessageLite& base) {
  const ImuData& this_ = static_cast<const ImuData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ImuData::ByteSizeLong() const {
  const ImuData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ImuData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .Vector3D acceleration = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.acceleration_);
    }
    // .Vector3D angular_velocity = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angular_velocity_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ImuData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImuData*>(&to_msg);
  auto& from = static_cast<const ImuData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ImuData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.acceleration_ != nullptr);
      if (_this->_impl_.acceleration_ == nullptr) {
        _this->_impl_.acceleration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.acceleration_);
      } else {
        _this->_impl_.acceleration_->MergeFrom(*from._impl_.acceleration_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.angular_velocity_ != nullptr);
      if (_this->_impl_.angular_velocity_ == nullptr) {
        _this->_impl_.angular_velocity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angular_velocity_);
      } else {
        _this->_impl_.angular_velocity_->MergeFrom(*from._impl_.angular_velocity_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImuData::CopyFrom(const ImuData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImuData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImuData::InternalSwap(ImuData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImuData, _impl_.angular_velocity_)
      + sizeof(ImuData::_impl_.angular_velocity_)
      - PROTOBUF_FIELD_OFFSET(ImuData, _impl_.acceleration_)>(
          reinterpret_cast<char*>(&_impl_.acceleration_),
          reinterpret_cast<char*>(&other->_impl_.acceleration_));
}

::google::protobuf::Metadata ImuData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AltimeterData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AltimeterData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_._has_bits_);
};

AltimeterData::AltimeterData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AltimeterData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AltimeterData)
}
AltimeterData::AltimeterData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AltimeterData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AltimeterData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE AltimeterData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AltimeterData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pressure_),
           0,
           offsetof(Impl_, temperature_) -
               offsetof(Impl_, pressure_) +
               sizeof(Impl_::temperature_));
}
AltimeterData::~AltimeterData() {
  // @@protoc_insertion_point(destructor:AltimeterData)
  SharedDtor(*this);
}
inline void AltimeterData::SharedDtor(MessageLite& self) {
  AltimeterData& this_ = static_cast<AltimeterData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AltimeterData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AltimeterData(arena);
}
constexpr auto AltimeterData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AltimeterData),
                                            alignof(AltimeterData));
}
constexpr auto AltimeterData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AltimeterData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AltimeterData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AltimeterData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AltimeterData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AltimeterData>(), &AltimeterData::ByteSizeLong,
              &AltimeterData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_._cached_size_),
          false,
      },
      &AltimeterData::kDescriptorMethods,
      &descriptor_table_sensor_5fdata_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AltimeterData_class_data_ =
        AltimeterData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AltimeterData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AltimeterData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AltimeterData_class_data_.tc_table);
  return AltimeterData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
AltimeterData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AltimeterData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::AltimeterData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float pressure = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_.pressure_)}},
    // float altitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_.altitude_)}},
    // float temperature = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_.temperature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float pressure = 1;
    {PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_.pressure_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float altitude = 2;
    {PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_.altitude_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float temperature = 3;
    {PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_.temperature_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void AltimeterData::Clear() {
// @@protoc_insertion_point(message_clear_start:AltimeterData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.pressure_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.temperature_) -
        reinterpret_cast<char*>(&_impl_.pressure_)) + sizeof(_impl_.temperature_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AltimeterData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AltimeterData& this_ = static_cast<const AltimeterData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AltimeterData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AltimeterData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:AltimeterData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float pressure = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_pressure()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_pressure(), target);
    }
  }

  // float altitude = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_altitude()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_altitude(), target);
    }
  }

  // float temperature = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_temperature()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_temperature(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AltimeterData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AltimeterData::ByteSizeLong(const MessageLite& base) {
  const AltimeterData& this_ = static_cast<const AltimeterData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AltimeterData::ByteSizeLong() const {
  const AltimeterData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:AltimeterData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // float pressure = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_pressure()) != 0) {
        total_size += 5;
      }
    }
    // float altitude = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_altitude()) != 0) {
        total_size += 5;
      }
    }
    // float temperature = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_temperature()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AltimeterData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AltimeterData*>(&to_msg);
  auto& from = static_cast<const AltimeterData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:AltimeterData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_pressure()) != 0) {
        _this->_impl_.pressure_ = from._impl_.pressure_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_altitude()) != 0) {
        _this->_impl_.altitude_ = from._impl_.altitude_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_temperature()) != 0) {
        _this->_impl_.temperature_ = from._impl_.temperature_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AltimeterData::CopyFrom(const AltimeterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AltimeterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AltimeterData::InternalSwap(AltimeterData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_.temperature_)
      + sizeof(AltimeterData::_impl_.temperature_)
      - PROTOBUF_FIELD_OFFSET(AltimeterData, _impl_.pressure_)>(
          reinterpret_cast<char*>(&_impl_.pressure_),
          reinterpret_cast<char*>(&other->_impl_.pressure_));
}

::google::protobuf::Metadata AltimeterData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SensorPacket::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SensorPacket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_._has_bits_);
};

void SensorPacket::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
SensorPacket::SensorPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SensorPacket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SensorPacket)
}
PROTOBUF_NDEBUG_INLINE SensorPacket::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::SensorPacket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SensorPacket::SensorPacket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SensorPacket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SensorPacket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorPacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.imu_data_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.imu_data_)
                : nullptr;
  _impl_.altimeter_data_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.altimeter_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:SensorPacket)
}
PROTOBUF_NDEBUG_INLINE SensorPacket::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SensorPacket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, altimeter_data_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::altimeter_data_));
}
SensorPacket::~SensorPacket() {
  // @@protoc_insertion_point(destructor:SensorPacket)
  SharedDtor(*this);
}
inline void SensorPacket::SharedDtor(MessageLite& self) {
  SensorPacket& this_ = static_cast<SensorPacket&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_;
  delete this_._impl_.imu_data_;
  delete this_._impl_.altimeter_data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SensorPacket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SensorPacket(arena);
}
constexpr auto SensorPacket::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SensorPacket),
                                            alignof(SensorPacket));
}
constexpr auto SensorPacket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SensorPacket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SensorPacket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SensorPacket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SensorPacket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SensorPacket>(), &SensorPacket::ByteSizeLong,
              &SensorPacket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_._cached_size_),
          false,
      },
      &SensorPacket::kDescriptorMethods,
      &descriptor_table_sensor_5fdata_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SensorPacket_class_data_ =
        SensorPacket::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SensorPacket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SensorPacket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SensorPacket_class_data_.tc_table);
  return SensorPacket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SensorPacket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SensorPacket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SensorPacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp timestamp = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_.timestamp_)}},
    // .ImuData imu_data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_.imu_data_)}},
    // .AltimeterData altimeter_data = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_.altimeter_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ImuData imu_data = 2;
    {PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_.imu_data_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .AltimeterData altimeter_data = 3;
    {PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_.altimeter_data_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::ImuData>()},
      {::_pbi::TcParser::GetTable<::AltimeterData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SensorPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:SensorPacket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.imu_data_ != nullptr);
      _impl_.imu_data_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.altimeter_data_ != nullptr);
      _impl_.altimeter_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SensorPacket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SensorPacket& this_ = static_cast<const SensorPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SensorPacket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SensorPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:SensorPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  // .ImuData imu_data = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.imu_data_, this_._impl_.imu_data_->GetCachedSize(), target,
        stream);
  }

  // .AltimeterData altimeter_data = 3;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.altimeter_data_, this_._impl_.altimeter_data_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SensorPacket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SensorPacket::ByteSizeLong(const MessageLite& base) {
  const SensorPacket& this_ = static_cast<const SensorPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SensorPacket::ByteSizeLong() const {
  const SensorPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:SensorPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .google.protobuf.Timestamp timestamp = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .ImuData imu_data = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.imu_data_);
    }
    // .AltimeterData altimeter_data = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.altimeter_data_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SensorPacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorPacket*>(&to_msg);
  auto& from = static_cast<const SensorPacket&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:SensorPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.imu_data_ != nullptr);
      if (_this->_impl_.imu_data_ == nullptr) {
        _this->_impl_.imu_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.imu_data_);
      } else {
        _this->_impl_.imu_data_->MergeFrom(*from._impl_.imu_data_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.altimeter_data_ != nullptr);
      if (_this->_impl_.altimeter_data_ == nullptr) {
        _this->_impl_.altimeter_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.altimeter_data_);
      } else {
        _this->_impl_.altimeter_data_->MergeFrom(*from._impl_.altimeter_data_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorPacket::CopyFrom(const SensorPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SensorPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorPacket::InternalSwap(SensorPacket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_.altimeter_data_)
      + sizeof(SensorPacket::_impl_.altimeter_data_)
      - PROTOBUF_FIELD_OFFSET(SensorPacket, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata SensorPacket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sensor_5fdata_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
