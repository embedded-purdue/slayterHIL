name: Zephyr RTOS Multi-Board Build

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build for ${{ matrix.board_name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - board_name: qemu_x86
            board_target: qemu_x86
          - board_name: esp32s3_devkitc-esp32s3-procpu
            board_target: esp32s3_devkitc/esp32s3/procpu
          - board_name: nucleo_f302r8
            board_target: nucleo_f302r8

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
          make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

    - name: Install West
      run: |
        pip3 install --user -U west
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Initialize Zephyr workspace
      run: |
        west init -m https://github.com/zephyrproject-rtos/zephyr --mr main zephyrproject
        cd zephyrproject
        west update
        west zephyr-export

    - name: Install Zephyr dependencies
      run: |
        pip3 install --user -r zephyrproject/zephyr/scripts/requirements.txt

    - name: Set up Zephyr environment
      run: |
        cd zephyrproject
        echo "ZEPHYR_BASE=$PWD/zephyr" >> $GITHUB_ENV
        echo "$PWD/zephyr/scripts" >> $GITHUB_PATH

    - name: Build for ${{ matrix.board_name }}
      run: |
        cd zephyrproject
        west build -p auto -b "${{ matrix.board_target }}" "$GITHUB_WORKSPACE/test_node/app"

    - name: Upload build artifacts for ${{ matrix.board_name }}
      uses: actions/upload-artifact@v4
      with:
        name: zephyr-build-${{ matrix.board_name }}
        path: zephyrproject/build/

  test:
    name: Test on QEMU
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
          make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

    - name: Install West
      run: |
        pip3 install --user -U west
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Initialize Zephyr workspace
      run: |
        west init -m https://github.com/zephyrproject-rtos/zephyr --mr main zephyrproject
        cd zephyrproject
        west update
        west zephyr-export

    - name: Install Zephyr dependencies
      run: |
        pip3 install --user -r zephyrproject/zephyr/scripts/requirements.txt

    - name: Set up Zephyr environment
      run: |
        cd zephyrproject
        echo "ZEPHYR_BASE=$PWD/zephyr" >> $GITHUB_ENV
        echo "$PWD/zephyr/scripts" >> $GITHUB_PATH

    - name: Run QEMU test
      run: |
        cd zephyrproject
        west build -p auto -b qemu_x86 "$GITHUB_WORKSPACE/test_node/app"
        timeout 30s west build -t run || true

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create release archive
      run: |
        mkdir -p release
        for artifact in artifacts/zephyr-build-*; do
          board=$(basename "$artifact" | sed 's/zephyr-build-//')
          cp -r "$artifact" "release/$board"
        done
        tar -czf slayterHIL-firmware.tar.gz -C release .

    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        files: slayterHIL-firmware.tar.gz
        generate_release_notes: true

