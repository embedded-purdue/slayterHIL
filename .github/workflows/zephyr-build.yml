name: Zephyr RTOS Multi-Board Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build for ${{ matrix.board }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [qemu_x86, esp32s3_devkitc, nucleo_f302r8]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
          make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

    - name: Install West
      run: |
        pip3 install --user -U west
        echo 'export PATH=~/.local/bin:"$PATH"' >> $GITHUB_ENV

    - name: Initialize Zephyr workspace
      run: |
        west init -m https://github.com/zephyrproject-rtos/zephyr --mr main zephyrproject
        cd zephyrproject
        west update
        west zephyr-export

    - name: Install Zephyr dependencies
      run: |
        pip3 install --user -r zephyrproject/zephyr/scripts/requirements.txt

    - name: Set up Zephyr environment
      run: |
        cd zephyrproject
        echo 'export ZEPHYR_BASE=$PWD/zephyr' >> $GITHUB_ENV
        echo 'export PATH=$PWD/zephyr/scripts:$PATH' >> $GITHUB_ENV

    - name: Build for ${{ matrix.board }}
      run: |
        cd zephyrproject
        west build -p auto -b ${{ matrix.board }} $GITHUB_WORKSPACE/test_node/app

    - name: Upload build artifacts for ${{ matrix.board }}
      uses: actions/upload-artifact@v4
      with:
        name: zephyr-build-${{ matrix.board }}
        path: zephyrproject/build/

  test:
    name: Test on QEMU
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
          make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

    - name: Install West
      run: |
        pip3 install --user -U west
        echo 'export PATH=~/.local/bin:"$PATH"' >> $GITHUB_ENV

    - name: Initialize Zephyr workspace
      run: |
        west init -m https://github.com/zephyrproject-rtos/zephyr --mr main zephyrproject
        cd zephyrproject
        west update
        west zephyr-export

    - name: Install Zephyr dependencies
      run: |
        pip3 install --user -r zephyrproject/zephyr/scripts/requirements.txt

    - name: Set up Zephyr environment
      run: |
        cd zephyrproject
        echo 'export ZEPHYR_BASE=$PWD/zephyr' >> $GITHUB_ENV
        echo 'export PATH=$PWD/zephyr/scripts:$PATH' >> $GITHUB_ENV

    - name: Run QEMU test
      run: |
        cd zephyrproject
        west build -p auto -b qemu_x86 $GITHUB_WORKSPACE/test_node/app
        timeout 30s west build -t run || true  # Run for 30 seconds then stop

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create release archive
      run: |
        mkdir -p release
        for artifact in artifacts/zephyr-build-*; do
          board=$(basename $artifact | sed 's/zephyr-build-//')
          cp -r $artifact release/$board
        done
        tar -czf slayterHIL-firmware.tar.gz -C release .

    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        files: slayterHIL-firmware.tar.gz
        generate_release_notes: true
